# Generated by Django 5.2.1 on 2025-06-19 11:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('mobile_money', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tontine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique de la tontine', primary_key=True, serialize=False)),
                ('nom', models.CharField(help_text='Nom de la tontine', max_length=200)),
                ('montantMinMise', models.DecimalField(decimal_places=2, help_text='Montant minimum de la mise quotidienne en FCFA', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('1.00'))])),
                ('montantMaxMise', models.DecimalField(decimal_places=2, help_text='Montant maximum de la mise quotidienne en FCFA', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('1.00'))])),
                ('reglesRetrait', models.JSONField(default=dict, help_text='Règles de retrait définies pour cette tontine')),
                ('dateCreation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création de la tontine')),
                ('statut', models.CharField(choices=[('active', 'Active'), ('fermee', 'Fermée'), ('suspendue', 'Suspendue')], default='active', help_text='Statut de la tontine', max_length=15)),
                ('fraisAdhesion', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text="Frais d'adhésion à la tontine en FCFA", max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('1.00')), django.core.validators.MaxValueValidator(Decimal('5000.00'))])),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification')),
                ('administrateurId', models.ForeignKey(help_text='Administrateur SFD responsable de cette tontine', on_delete=django.db.models.deletion.PROTECT, related_name='tontines_administrees', to='accounts.administrateursfd')),
            ],
            options={
                'verbose_name': 'Tontine',
                'verbose_name_plural': 'Tontines',
                'db_table': 'tontines_tontine',
                'ordering': ['-dateCreation'],
            },
        ),
        migrations.CreateModel(
            name='TontineParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('montantMise', models.DecimalField(decimal_places=2, help_text='Montant de la mise quotidienne du client', max_digits=12)),
                ('dateAdhesion', models.DateTimeField(default=django.utils.timezone.now, help_text="Date d'adhésion à la tontine")),
                ('dateRetrait', models.DateTimeField(blank=True, help_text='Date de retrait de la tontine', null=True)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', help_text='Statut du participant', max_length=15)),
                ('fraisAdhesionPayes', models.BooleanField(default=False, help_text="Indique si les frais d'adhésion ont été payés")),
                ('client', models.ForeignKey(help_text='Client participant', on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
                ('tontine', models.ForeignKey(help_text='Tontine concernée', on_delete=django.db.models.deletion.CASCADE, to='tontines.tontine')),
                ('transactionAdhesion', models.ForeignKey(blank=True, help_text="Transaction Mobile Money pour les frais d'adhésion", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='adhesions_associees', to='mobile_money.transactionmobilemoney')),
            ],
            options={
                'verbose_name': 'Participant Tontine',
                'verbose_name_plural': 'Participants Tontine',
                'db_table': 'tontines_participant',
                'unique_together': {('tontine', 'client')},
            },
        ),
        migrations.AddField(
            model_name='tontine',
            name='participants',
            field=models.ManyToManyField(blank=True, help_text='Clients participants à cette tontine', related_name='tontines_participees', through='tontines.TontineParticipant', to='accounts.client'),
        ),
        migrations.CreateModel(
            name='Adhesion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique du workflow d'adhésion", primary_key=True, serialize=False)),
                ('montant_mise', models.DecimalField(decimal_places=2, help_text='Montant de mise souhaité (FCFA)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('1000'))])),
                ('document_identite', models.FileField(blank=True, help_text="Document d'identité (CNI, Passeport, etc.)", null=True, upload_to='demandes/documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('numero_telephone_paiement', models.CharField(blank=True, help_text='Numéro de téléphone pour les paiements Mobile Money (saisi lors du paiement)', max_length=15, null=True)),
                ('operateur_mobile_money', models.CharField(blank=True, choices=[('mtn', 'MTN'), ('moov', 'Moov'), ('orange', 'Orange')], help_text='Opérateur Mobile Money choisi lors du paiement', max_length=10, null=True)),
                ('statut_actuel', models.CharField(choices=[('demande_soumise', 'Demande soumise'), ('validee_agent', 'Validée par agent'), ('en_cours_paiement', 'En cours de paiement'), ('paiement_effectue', 'Paiement effectué'), ('adherent', 'Adhérent actif'), ('rejetee', 'Rejetée')], default='demande_soumise', help_text='Statut actuel du workflow', max_length=30)),
                ('etape_actuelle', models.CharField(choices=[('etape_1', 'Étape 1 - Validation agent'), ('etape_2', 'Étape 2 - Paiement frais'), ('etape_3', 'Étape 3 - Intégration tontine')], default='etape_1', help_text='Étape actuelle du processus', max_length=20)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de soumission de la demande')),
                ('date_validation_agent', models.DateTimeField(blank=True, help_text="Date de validation par l'agent", null=True)),
                ('date_paiement_frais', models.DateTimeField(blank=True, help_text="Date de paiement des frais d'adhésion", null=True)),
                ('date_integration', models.DateTimeField(blank=True, help_text="Date d'intégration effective à la tontine", null=True)),
                ('frais_adhesion_calcules', models.DecimalField(blank=True, decimal_places=2, help_text="Frais d'adhésion calculés automatiquement", max_digits=10, null=True)),
                ('frais_adhesion_payes', models.DecimalField(blank=True, decimal_places=2, help_text='Montant des frais effectivement payés', max_digits=10, null=True)),
                ('reference_paiement', models.CharField(blank=True, help_text='Référence du paiement Mobile Money', max_length=100)),
                ('email_confirmation_envoye', models.BooleanField(default=False, help_text='Email de confirmation envoyé au client')),
                ('nombre_rappels_paiement', models.PositiveIntegerField(default=0, help_text='Nombre de rappels de paiement envoyés')),
                ('commentaires_agent', models.TextField(blank=True, help_text="Commentaires de l'agent lors de la validation")),
                ('raison_rejet', models.TextField(blank=True, help_text='Raison du rejet de la demande')),
                ('metadata', models.JSONField(blank=True, help_text='Métadonnées additionnelles (tokens, API responses, etc.)', null=True)),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification')),
                ('agent_validateur', models.ForeignKey(blank=True, help_text='Agent SFD ayant validé la demande', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflows_valides', to='accounts.agentsfd')),
                ('client', models.ForeignKey(help_text="Client demandant l'adhésion", on_delete=django.db.models.deletion.CASCADE, related_name='workflows_adhesion', to='accounts.client')),
                ('transaction_mobile_money', models.ForeignKey(blank=True, help_text='Transaction Mobile Money associée', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workflows_adhesion', to='mobile_money.transactionmobilemoney')),
                ('tontine', models.ForeignKey(help_text='Tontine à rejoindre', on_delete=django.db.models.deletion.CASCADE, related_name='workflows_adhesion', to='tontines.tontine')),
            ],
            options={
                'verbose_name': "Workflow d'adhésion",
                'verbose_name_plural': "Workflows d'adhésion",
                'db_table': 'tontines_workflow_adhesion_unifie',
                'ordering': ['-date_creation'],
                'indexes': [models.Index(fields=['client', 'statut_actuel'], name='tontines_wo_client__f3bdc3_idx'), models.Index(fields=['tontine', 'statut_actuel'], name='tontines_wo_tontine_895b7c_idx'), models.Index(fields=['date_creation'], name='tontines_wo_date_cr_4042e5_idx'), models.Index(fields=['etape_actuelle', 'statut_actuel'], name='tontines_wo_etape_a_809db7_idx')],
            },
        ),
    ]
