# Generated by Django 5.2.1 on 2025-06-19 11:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OperateurMobileMoney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text="Nom de l'opérateur (ex: MTN, Moov, Orange)", max_length=50, unique=True)),
                ('code', models.CharField(help_text="Code court de l'opérateur (ex: MTN, MOOV)", max_length=10, unique=True)),
                ('prefixes_telephone', models.JSONField(default=list, help_text='Préfixes téléphoniques supportés par cet opérateur')),
                ('api_base_url', models.URLField(help_text="URL de base de l'API de l'opérateur")),
                ('api_key', models.CharField(blank=True, help_text="Clé API pour l'authentification", max_length=255)),
                ('api_secret', models.CharField(blank=True, help_text="Secret API pour l'authentification", max_length=255)),
                ('merchant_id', models.CharField(blank=True, help_text='Identifiant marchand', max_length=100)),
                ('frais_fixe', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Frais fixe par transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('frais_pourcentage', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Frais en pourcentage du montant', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.0000'))])),
                ('montant_minimum', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Montant minimum par transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('1.00'))])),
                ('montant_maximum', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), help_text='Montant maximum par transaction', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('1.00'))])),
                ('webhook_url', models.URLField(blank=True, help_text='URL de callback pour les notifications')),
                ('timeout_secondes', models.PositiveIntegerField(default=300, help_text='Timeout en secondes pour les requêtes API')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification')),
            ],
            options={
                'verbose_name': 'Opérateur Mobile Money',
                'verbose_name_plural': 'Opérateurs Mobile Money',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_callback', models.URLField(help_text="URL de callback configurée chez l'opérateur")),
                ('secret_webhook', models.CharField(help_text="Secret pour valider l'authenticité des callbacks", max_length=255)),
                ('methode_authentification', models.CharField(default='signature_hmac', help_text="Méthode d'authentification des webhooks", max_length=50)),
                ('actif', models.BooleanField(default=True, help_text='Si le webhook est actif')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de modification')),
                ('operateur', models.OneToOneField(help_text='Opérateur associé', on_delete=django.db.models.deletion.CASCADE, related_name='configuration_webhook', to='mobile_money.operateurmobilemoney')),
            ],
            options={
                'verbose_name': 'Configuration Webhook',
                'verbose_name_plural': 'Configurations Webhooks',
            },
        ),
        migrations.CreateModel(
            name='TransactionMobileMoney',
            fields=[
                ('lien_paiement', models.URLField(blank=True, help_text="Lien de paiement web Mobile Money (MTN) à transmettre à l'utilisateur", null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique de la transaction', primary_key=True, serialize=False)),
                ('reference_interne', models.CharField(help_text='Référence interne TontiFlex', max_length=50, unique=True)),
                ('reference_operateur', models.CharField(blank=True, help_text="Référence fournie par l'opérateur", max_length=100, null=True)),
                ('type_transaction', models.CharField(choices=[('depot', 'Dépôt'), ('retrait', 'Retrait'), ('transfert', 'Transfert'), ('paiement', 'Paiement'), ('remboursement', 'Remboursement')], help_text='Type de transaction', max_length=15)),
                ('montant', models.DecimalField(decimal_places=2, help_text='Montant de la transaction en FCFA', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('1.00'))])),
                ('frais', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Frais de la transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('montant_total', models.DecimalField(decimal_places=2, help_text='Montant total (montant + frais)', max_digits=12)),
                ('numero_telephone', models.CharField(help_text='Numéro de téléphone du client', max_length=15, validators=[django.core.validators.RegexValidator(message='Format de numéro de téléphone invalide', regex='^\\+?[0-9]{8,15}$')])),
                ('nom_client', models.CharField(help_text='Nom du client', max_length=100)),
                ('statut', models.CharField(choices=[('initie', 'Initié'), ('en_attente', 'En attente de confirmation'), ('en_cours', 'En cours de traitement'), ('succes', 'Succès'), ('echec', 'Échec'), ('expire', 'Expiré'), ('annule', 'Annulé'), ('rembourse', 'Remboursé')], default='initie', help_text='Statut de la transaction', max_length=15)),
                ('description', models.TextField(blank=True, help_text='Description de la transaction')),
                ('callback_data', models.JSONField(blank=True, default=dict, help_text="Données reçues du callback de l'opérateur")),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Métadonnées additionnelles')),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création de la transaction')),
                ('date_expiration', models.DateTimeField(blank=True, help_text="Date d'expiration de la transaction", null=True)),
                ('date_completion', models.DateTimeField(blank=True, help_text='Date de completion de la transaction', null=True)),
                ('devise', models.CharField(default='XOF', help_text='Code devise (XOF pour FCFA)', max_length=3)),
                ('reponse_operateur', models.JSONField(blank=True, default=dict, help_text="Réponse complète de l'API opérateur")),
                ('message_erreur', models.TextField(blank=True, help_text="Message d'erreur si échec")),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification')),
                ('nombre_tentatives', models.PositiveIntegerField(default=0, help_text='Nombre de tentatives de traitement')),
                ('derniere_erreur', models.TextField(blank=True, help_text='Dernière erreur rencontrée')),
                ('client', models.ForeignKey(help_text='Client TontiFlex', on_delete=django.db.models.deletion.CASCADE, related_name='transactions_mobile_money', to='accounts.client')),
                ('operateur', models.ForeignKey(help_text='Opérateur Mobile Money utilisé', on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='mobile_money.operateurmobilemoney')),
                ('transaction_tontiflex', models.OneToOneField(blank=True, help_text='Transaction Mobile Money associée', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_mobile_money', to='mobile_money.transactionmobilemoney')),
            ],
            options={
                'verbose_name': 'Transaction Mobile Money',
                'verbose_name_plural': 'Transactions Mobile Money',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='LogTransactionMobileMoney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_evenement', models.CharField(choices=[('creation', 'Création'), ('envoi_api', 'Envoi API'), ('reponse_api', 'Réponse API'), ('callback', 'Callback reçu'), ('changement_statut', 'Changement de statut'), ('erreur', 'Erreur'), ('retry', 'Nouvelle tentative')], help_text="Type d'événement", max_length=20)),
                ('ancien_statut', models.CharField(blank=True, help_text='Ancien statut (pour les changements de statut)', max_length=15)),
                ('nouveau_statut', models.CharField(blank=True, help_text='Nouveau statut (pour les changements de statut)', max_length=15)),
                ('message', models.TextField(help_text="Message ou description de l'événement")),
                ('donnees', models.JSONField(blank=True, default=dict, help_text="Données additionnelles de l'événement")),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, help_text="Date de l'événement")),
                ('transaction', models.ForeignKey(help_text='Transaction concernée', on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='mobile_money.transactionmobilemoney')),
            ],
            options={
                'verbose_name': 'Log Transaction Mobile Money',
                'verbose_name_plural': 'Logs Transactions Mobile Money',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddIndex(
            model_name='transactionmobilemoney',
            index=models.Index(fields=['reference_interne'], name='mobile_mone_referen_6145dd_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmobilemoney',
            index=models.Index(fields=['reference_operateur'], name='mobile_mone_referen_b8f1ee_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmobilemoney',
            index=models.Index(fields=['statut'], name='mobile_mone_statut_5d2cfe_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmobilemoney',
            index=models.Index(fields=['numero_telephone'], name='mobile_mone_numero__6b549a_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionmobilemoney',
            index=models.Index(fields=['date_creation'], name='mobile_mone_date_cr_435301_idx'),
        ),
    ]
