"""
TEMPORAIREMENT D√âSACTIV√â - MIGRATION VERS KKIAPAY
Ce module sera supprim√© une fois la migration KKiaPay termin√©e.

Nouveau module payments/ avec KKiaPay int√©gr√©.
Documentation : https://kkiapay.me/kkiapay-integration/?lang=en
Dashboard : https://app.kkiapay.me/dashboard

Mode SANDBOX activ√© pour tests et validation.
Changement vers LIVE apr√®s validation compl√®te.

VOIR PROJET_HISTORIQUE.md pour suivi d√©taill√© de la migration.
"""

"""
Views Django REST Framework pour le module Mobile Money.
"""
from rest_framework import viewsets, permissions
from drf_spectacular.utils import extend_schema, extend_schema_view, OpenApiExample, OpenApiResponse

from .models import TransactionMobileMoney, OperateurMobileMoney
from .serializers import (
    TransactionMobileMoneySerializer,
    TransactionDetailSerializer,
    OperateurMobileMoneySerializer
)


@extend_schema_view(
    list=extend_schema(
        summary="Historique des transactions Mobile Money",
        description="""
        Affiche l'historique des transactions Mobile Money de la plateforme TontiFlex.
        
        Types de transactions TontiFlex:
        Paiement adh√©sion: Frais d'entr√©e dans une tontine
        Cotisation: Versement quotidien dans la tontine
        Commission SFD: 1√®re cotisation de chaque cycle
        Retrait: Retrait de fonds par un participant
        Remboursement: Annulation ou retour de fonds
        
        Op√©rateurs support√©s:
        MTN Mobile Money (B√©nin, Burkina, C√¥te d'Ivoire)
        Moov Money (r√©seau Orange/Moov)
        
        Statuts de transaction:
        en_cours: Transaction initi√©e, en attente confirmation
        confirmee: Paiement confirm√© par l'op√©rateur
        echouee: Transaction √©chou√©e (solde insuffisant, erreur technique)
        annulee: Transaction annul√©e par l'utilisateur
        remboursee: Fonds restitu√©s au client
        
        Filtres disponibles:
        Par p√©riode (date d√©but/fin)
        Par type de transaction
        Par statut
        Par op√©rateur Mobile Money
        Par num√©ro de t√©l√©phone
        """,
        responses={200: TransactionMobileMoneySerializer(many=True)}
    ),
    retrieve=extend_schema(
        summary="D√©tails d'une transaction Mobile Money",
        description="""
        R√©cup√®re les d√©tails complets d'une transaction Mobile Money.
        
        Informations d√©taill√©es:
        R√©f√©rences de transaction (TontiFlex + Op√©rateur)
        Timestamps complets (initiation, confirmation, finalisation)
        D√©tails du compte Mobile Money utilis√©
        Frais appliqu√©s (op√©rateur + commission TontiFlex)
        Contexte de la transaction (tontine, participant concern√©)
        Messages d'erreur √©ventuels
        Historique des tentatives
        
        Tra√ßabilit√© compl√®te:
        ID de transaction chez l'op√©rateur
        Codes de retour et messages syst√®me
        Journal des statuts successifs
        Liens vers les entit√©s TontiFlex concern√©es
        
        Permissions requises:
        Utilisateur concern√© par la transaction
        Staff SFD pour les transactions de leur SFD
        Admin plateforme pour toutes les transactions
        """,
        responses={
            200: TransactionDetailSerializer,
            403: OpenApiResponse(description="Acc√®s refus√© - transaction non accessible"),
            404: OpenApiResponse(description="Transaction introuvable")
        }
    )
)
@extend_schema(tags=["üí≥ Mobile Money"])
class TransactionMobileMoneyViewSet(viewsets.ReadOnlyModelViewSet):
    """
    ViewSet pour la consultation des transactions Mobile Money
    """
    queryset = TransactionMobileMoney.objects.all()
    permission_classes = [permissions.IsAuthenticated]

    def get_serializer_class(self):
        if self.action == 'retrieve':
            return TransactionDetailSerializer
        return TransactionMobileMoneySerializer
    
    def get_queryset(self):
        """Filter transactions based on user permissions"""
        user = self.request.user
        
        if hasattr(user, 'adminplateforme'):
            # Admin plateforme peut voir toutes les transactions
            return TransactionMobileMoney.objects.all()
        elif hasattr(user, 'agentsfd') or hasattr(user, 'superviseurssfd') or hasattr(user, 'administrateurssfd'):
            # Staff SFD peut voir les transactions de leur SFD
            sfd = getattr(user.agentsfd, 'sfd', None) or getattr(user.superviseurssfd, 'sfd', None) or getattr(user.administrateurssfd, 'sfd', None)
            if sfd:
                # Transactions li√©es aux adh√©sions et cotisations de ce SFD
                from tontines.models import Adhesion, Cotisation
                transaction_ids = set()
                
                # Transactions d'adh√©sions
                adhesions = Adhesion.objects.filter(tontine__administrateurId__sfd=sfd)
                transaction_ids.update(adhesions.values_list('transaction_paiement_id', flat=True))
                
                # Transactions de cotisations
                cotisations = Cotisation.objects.filter(tontine__administrateurId__sfd=sfd)
                transaction_ids.update(cotisations.values_list('transaction_mobile_money_id', flat=True))
                
                return TransactionMobileMoney.objects.filter(id__in=transaction_ids)
        elif hasattr(user, 'clientsfd'):
            # Client peut voir ses propres transactions
            from tontines.models import Adhesion, Cotisation
            transaction_ids = set()
            
            # Transactions d'adh√©sions du client
            adhesions = Adhesion.objects.filter(client=user.clientsfd)
            transaction_ids.update(adhesions.values_list('transaction_paiement_id', flat=True))
              # Transactions de cotisations du client
            cotisations = Cotisation.objects.filter(client=user.clientsfd)
            transaction_ids.update(cotisations.values_list('transaction_mobile_money_id', flat=True))
            
            return TransactionMobileMoney.objects.filter(id__in=transaction_ids)
        
        return TransactionMobileMoney.objects.none()


@extend_schema_view(
    list=extend_schema(
        summary="Liste des op√©rateurs Mobile Money",
        description="""
        Affiche la liste des op√©rateurs Mobile Money support√©s par TontiFlex.
        
        **Op√©rateurs actuellement support√©s**:
        
        üáßüáØ **B√©nin**:
        - MTN Mobile Money (r√©seau MTN Benin)
        - Moov Money (r√©seau Moov Africa Benin)
        
        üáßüá´ **Burkina Faso**:
        - MTN Mobile Money (r√©seau MTN Burkina)
        - Orange Money (r√©seau Orange Burkina)
          üá®üáÆ C√¥te d'Ivoire:
        MTN Mobile Money (r√©seau MTN CI)
        Orange Money (r√©seau Orange CI)
        Wave (portefeuille mobile)
        
        Informations par op√©rateur:
        Nom commercial et code technique
        Pays de couverture et pr√©fixes support√©s
        Frais de transaction par tranche
        Limites de transaction (min/max)
        Statut de disponibilit√© (actif/maintenance)
        API endpoints et versions support√©es
        
        Int√©gration technique:
        API REST pour initiation de paiement
        Webhooks pour confirmation de transaction
        Format de r√©ponse standardis√©
        Gestion des codes d'erreur sp√©cifiques
        """,
        responses={200: OperateurMobileMoneySerializer(many=True)}
    ),
    retrieve=extend_schema(
        summary="D√©tails d'un op√©rateur Mobile Money",
        description="""
        R√©cup√®re les informations d√©taill√©es d'un op√©rateur Mobile Money.
        
        Informations techniques:
        Configuration API (endpoints, headers, authentification)
        Grille tarifaire compl√®te par type de transaction
        Codes d'erreur et messages sp√©cifiques
        Limites op√©rationnelles (montants, fr√©quence)
        Horaires de disponibilit√© et maintenance
        
        Statistiques d'utilisation:
        Volume de transactions trait√©
        Taux de succ√®s et d'√©chec
        Temps de r√©ponse moyen
        Derni√®re synchronisation avec l'API
        
        Utilis√© pour:
        Configuration des services de paiement
        Diagnostic des probl√®mes de transaction
        Optimisation des routes de paiement
        Reporting et analytics
        """,
        responses={
            200: OperateurMobileMoneySerializer,
            404: OpenApiResponse(description="Op√©rateur introuvable")
        }
    )
)
@extend_schema(tags=["üì± Op√©rateurs Mobile Money"])
class OperateurMobileMoneyViewSet(viewsets.ReadOnlyModelViewSet):
    """
    ViewSet pour la consultation des op√©rateurs Mobile Money
    """
    queryset = OperateurMobileMoney.objects.all()
    serializer_class = OperateurMobileMoneySerializer
    permission_classes = [permissions.IsAuthenticated]
