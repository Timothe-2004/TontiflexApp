# Generated by Django 5.0.2 on 2025-06-25 16:30

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('mobile_money', '0002_transactionmobilemoney_is_commission'),
    ]

    operations = [
        migrations.CreateModel(
            name='SavingsAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique du compte épargne', primary_key=True, serialize=False)),
                ('statut', models.CharField(choices=[('en_cours_creation', 'En cours de création'), ('validee_agent', 'Validée par agent'), ('paiement_effectue', 'Paiement effectué'), ('actif', 'Actif'), ('suspendu', 'Suspendu'), ('ferme', 'Fermé'), ('rejete', 'Rejeté')], default='en_cours_creation', help_text='Statut actuel du compte épargne', max_length=20)),
                ('piece_identite', models.FileField(help_text="Copie numérique de la pièce d'identité (CNI, Passeport, etc.)", upload_to='savings/documents/identite/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('photo_identite', models.FileField(help_text="Photo d'identité du client", upload_to='savings/documents/photos/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('numero_telephone_paiement', models.CharField(blank=True, help_text='Numéro de téléphone Mobile Money pour frais de création', max_length=15, null=True)),
                ('operateur_mobile_money', models.CharField(blank=True, choices=[('mtn', 'MTN Mobile Money'), ('moov', 'Moov Money'), ('orange', 'Orange Money')], help_text='Opérateur Mobile Money choisi pour les transactions', max_length=10, null=True)),
                ('frais_creation', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), help_text='Frais de création du compte épargne en FCFA', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('500.00')), django.core.validators.MaxValueValidator(Decimal('5000.00'))])),
                ('date_demande', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de soumission de la demande de création')),
                ('date_validation_agent', models.DateTimeField(blank=True, help_text="Date de validation par l'agent SFD", null=True)),
                ('date_paiement_frais', models.DateTimeField(blank=True, help_text='Date de paiement des frais de création', null=True)),
                ('date_activation', models.DateTimeField(blank=True, help_text="Date d'activation du compte épargne", null=True)),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification')),
                ('commentaires_agent', models.TextField(blank=True, help_text="Commentaires de l'agent lors de la validation", max_length=1000, null=True)),
                ('raison_rejet', models.TextField(blank=True, help_text='Raison du rejet si applicable', max_length=500, null=True)),
                ('agent_validateur', models.ForeignKey(blank=True, help_text='Agent SFD ayant validé la demande de création', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comptes_epargne_valides', to='accounts.agentsfd')),
                ('client', models.OneToOneField(help_text='Client propriétaire du compte épargne', on_delete=django.db.models.deletion.CASCADE, related_name='compte_epargne', to='accounts.client')),
                ('transaction_frais_creation', models.ForeignKey(blank=True, help_text='Transaction Mobile Money pour les frais de création', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comptes_epargne_crees', to='mobile_money.transactionmobilemoney')),
            ],
            options={
                'verbose_name': 'Compte Épargne',
                'verbose_name_plural': 'Comptes Épargne',
                'db_table': 'savings_account',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='SavingsTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identifiant unique de la transaction', primary_key=True, serialize=False)),
                ('type_transaction', models.CharField(choices=[('depot', 'Dépôt'), ('retrait', 'Retrait')], help_text='Type de transaction (dépôt ou retrait)', max_length=10)),
                ('montant', models.DecimalField(decimal_places=2, help_text='Montant de la transaction en FCFA', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('statut', models.CharField(choices=[('en_cours', 'En cours'), ('confirmee', 'Confirmée'), ('echouee', 'Échouée'), ('annulee', 'Annulée')], default='en_cours', help_text='Statut de la transaction', max_length=15)),
                ('numero_telephone', models.CharField(help_text='Numéro de téléphone Mobile Money', max_length=15)),
                ('operateur', models.CharField(choices=[('mtn', 'MTN Mobile Money'), ('moov', 'Moov Money'), ('orange', 'Orange Money')], help_text='Opérateur Mobile Money utilisé', max_length=10)),
                ('date_transaction', models.DateTimeField(default=django.utils.timezone.now, help_text="Date d'initiation de la transaction")),
                ('date_confirmation', models.DateTimeField(blank=True, help_text='Date de confirmation de la transaction', null=True)),
                ('commentaires', models.TextField(blank=True, help_text='Commentaires sur la transaction', max_length=500, null=True)),
                ('compte_epargne', models.ForeignKey(help_text='Compte épargne concerné par la transaction', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='savings.savingsaccount')),
                ('transaction_mobile_money', models.OneToOneField(help_text='Transaction Mobile Money associée', on_delete=django.db.models.deletion.CASCADE, related_name='transaction_epargne', to='mobile_money.transactionmobilemoney')),
            ],
            options={
                'verbose_name': 'Transaction Épargne',
                'verbose_name_plural': 'Transactions Épargne',
                'db_table': 'savings_transaction',
                'ordering': ['-date_transaction'],
            },
        ),
        migrations.AddIndex(
            model_name='savingsaccount',
            index=models.Index(fields=['statut'], name='savings_acc_statut_674b1e_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsaccount',
            index=models.Index(fields=['client'], name='savings_acc_client__5e7fa2_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsaccount',
            index=models.Index(fields=['agent_validateur'], name='savings_acc_agent_v_07b0d5_idx'),
        ),
        migrations.AddIndex(
            model_name='savingsaccount',
            index=models.Index(fields=['date_demande'], name='savings_acc_date_de_f8bdf3_idx'),
        ),
        migrations.AddIndex(
            model_name='savingstransaction',
            index=models.Index(fields=['compte_epargne', 'type_transaction'], name='savings_tra_compte__c26d59_idx'),
        ),
        migrations.AddIndex(
            model_name='savingstransaction',
            index=models.Index(fields=['statut'], name='savings_tra_statut_b72217_idx'),
        ),
        migrations.AddIndex(
            model_name='savingstransaction',
            index=models.Index(fields=['date_transaction'], name='savings_tra_date_tr_a28dd5_idx'),
        ),
    ]
