"""
Django settings for tontiflex project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import environ
import os
import dj_database_url

# Configuration django-environ pour KKiaPay
env = environ.Env(
    # Configuration par d√©faut
    DEBUG=(bool, False),
    KKIAPAY_SANDBOX=(bool, True),
    KKIAPAY_TIMEOUT=(int, 30),
    KKIAPAY_MAX_RETRIES=(int, 3),
)

# Lecture du fichier .env
environ.Env.read_env(os.path.join(Path(__file__).resolve().parent.parent, '.env'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='django-insecure-ea)dvrzq!-zog$cfegzkv7=8!za0dlui4#!fgv2(_t8)x8*uem')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG', default=True)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # Ajout pour CORS
    'rest_framework',
    'accounts',
    'tontines',
    'loans',
    'savings',
    'notifications',
    'drf_spectacular',
    'payments',  # MODULE KKIAPAY - REMPLACE MOBILE_MONEY
    # 'mobile_money',  # MODULE D√âSACTIV√â - MIGRATION VERS KKIAPAY UNIQUEMENT
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # CORS en premier
    'whitenoise.middleware.WhiteNoiseMiddleware',  # WhiteNoise pour fichiers statiques
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tontiflex.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tontiflex.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configuration SQLite par d√©faut pour tous les environnements
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Alternative PostgreSQL comment√©e pour r√©f√©rence future
# if env('DATABASE_URL', default=None):
#     # Configuration PostgreSQL pour production (Render)
#     DATABASES = {
#         'default': dj_database_url.parse(env('DATABASE_URL'))
#     }
# else:
#     # Configuration SQLite pour d√©veloppement local
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': BASE_DIR / 'db.sqlite3',
#         }
#     }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Configuration Whitenoise pour servir les fichiers statiques en production
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- DRF Configuration ---
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'TontiFlex API - Syst√®me de Finance D√©centralis√©e',
    'DESCRIPTION': '''
    API compl√®te pour la gestion des tontines, comptes d'√©pargne et pr√™ts dans un syst√®me de finance d√©centralis√©e (SFD).
    
    ## Fonctionnalit√©s principales :
    
    ### üè¶ Gestion des Comptes
    - Clients, Agents SFD, Superviseurs, Administrateurs
    - Authentification JWT s√©curis√©e
    - Gestion des r√¥les et permissions
    
    ### üí∞ Tontines
    - Cr√©ation et gestion des tontines
    - Adh√©sion des clients avec paiement KKiaPay
    - Cotisations et retraits
    - Suivi des soldes et historiques
    
    ### üí≥ √âpargne
    - Ouverture de comptes √©pargne
    - D√©p√¥ts et retraits avec validation agent
    - Calcul d'int√©r√™ts
    
    ### üèõÔ∏è Pr√™ts
    - Demandes de pr√™t avec workflow Superviseur ‚Üí Admin
    - G√©n√©ration automatique d'√©ch√©anciers
    - Remboursements via KKiaPay
    - Calcul de p√©nalit√©s
    
    ### üí∏ Paiements (KKiaPay)
    - Int√©gration compl√®te avec l'agr√©gateur KKiaPay
    - Support MTN Money, Moov Money, Orange Money
    - Webhooks pour confirmations temps r√©el
    - Mode SANDBOX pour tests
    
    ### üì¨ Notifications
    - Notifications push, email et SMS
    - Alertes automatiques pour transactions
    - Rappels de remboursement
    
    ## Authentification
    Utilisez le token JWT dans l'en-t√™te Authorization : `Bearer YOUR_ACCESS_TOKEN`
    ''',
    'VERSION': '2.0.0',
    'CONTACT': {
        'name': 'TontiFlex API Support',
        'email': 'support@tontiflex.com',
    },
    'LICENSE': {
        'name': 'MIT License',
    },
    'COMPONENT_SPLIT_REQUEST': True,
    'SCHEMA_PATH_PREFIX': r'/api/',
    'SERVE_INCLUDE_SCHEMA': False,
    'SWAGGER_UI_SETTINGS': {
        'deepLinking': True,
        'persistAuthorization': True,
        'displayOperationId': True,
        'defaultModelsExpandDepth': 2,
        'defaultModelExpandDepth': 2,
        'defaultModelRendering': 'model',
        'displayRequestDuration': True,
        'docExpansion': 'list',
        'filter': True,
        'showExtensions': True,
        'showCommonExtensions': True,
        'tryItOutEnabled': True,
        'requestInterceptor': '(req) => { console.log("üöÄ API Request:", req); return req; }',
        'responseInterceptor': '(res) => { console.log("üì® API Response:", res); return res; }',
        'supportedSubmitMethods': ['get', 'post', 'put', 'patch', 'delete', 'head'],
        'validatorUrl': None,
    },
    'SECURITY': [
        {
            'jwtAuth': []
        }
    ],
    'COMPONENTS': {
        'securitySchemes': {
            'jwtAuth': {
                'type': 'http',
                'scheme': 'bearer',
                'bearerFormat': 'JWT',
                'description': 'JWT Authorization header using the Bearer scheme. Format: Bearer YOUR_ACCESS_TOKEN'
            }
        }
    },
    'SERVERS': [
        {
            'url': 'http://localhost:8000',
            'description': 'Serveur de d√©veloppement local'
        },
        {
            'url': 'http://127.0.0.1:8000',
            'description': 'Serveur de d√©veloppement (127.0.0.1)'
        },
        {
            'url': 'https://tontiflexapp.onrender.com',
            'description': 'Serveur de production (Render)'
        }
    ],
    'TAGS': [
        {
            'name': 'Authentication',
            'description': 'Endpoints d\'authentification et gestion des tokens JWT'
        },
        {
            'name': 'Accounts',
            'description': 'Gestion des comptes utilisateurs (Clients, Agents, Admins)'
        },
        {
            'name': 'Tontines',
            'description': 'Gestion des tontines, adh√©sions, cotisations et retraits'
        },
        {
            'name': 'Savings',
            'description': 'Comptes d\'√©pargne, d√©p√¥ts et retraits'
        },
        {
            'name': 'Loans',
            'description': 'Demandes de pr√™t, √©ch√©anciers et remboursements'
        },
        {
            'name': 'Payments',
            'description': 'Int√©gration KKiaPay - Paiements Mobile Money'
        },
        {
            'name': 'Notifications',
            'description': 'Syst√®me de notifications push, email et SMS'
        },
        {
            'name': 'Webhooks',
            'description': 'Webhooks pour confirmations de paiement temps r√©el'
        }
    ],
}

# --- JWT Configuration ---

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=2),  # Augment√© √† 2h pour le d√©veloppement
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

# --- End JWT Configuration ---

# --- CORS Configuration ---
# Configuration CORS s√©curis√©e pour production
if DEBUG:
    # En d√©veloppement : plus permissif
    CORS_ALLOW_ALL_ORIGINS = True
else:
    # En production : s√©curis√© avec domaines sp√©cifiques
    CORS_ALLOW_ALL_ORIGINS = False
    CORS_ALLOWED_ORIGINS = [
        "https://tontiflexapp.onrender.com",  # Domaine principal
        "https://www.tontiflexapp.onrender.com",  # Avec www
        "https://tontiflexapp-admin.onrender.com",  # Admin si s√©par√©
    ]

CORS_ALLOW_CREDENTIALS = True

# Headers CORS √©tendus pour l'API
CORS_ALLOWED_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization', 
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-api-key',
    'cache-control',
    'pragma',
]

CORS_ALLOWED_METHODS = [
    'DELETE',
    'GET', 
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Pr√©flight requests plus longs pour API complexes
CORS_PREFLIGHT_MAX_AGE = 86400

# --- Security Settings ---
if not DEBUG:
    # Production settings
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_SSL_REDIRECT = False  # Render g√®re d√©j√† HTTPS
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_BROWSER_XSS_FILTER = True
    X_FRAME_OPTIONS = 'DENY'
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    CSRF_COOKIE_HTTPONLY = True
    SESSION_COOKIE_HTTPONLY = True
else:
    # Development settings
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False

# Content Security Policy (optionnel)
if not DEBUG:
    CSP_DEFAULT_SRC = ("'self'",)
    CSP_SCRIPT_SRC = ("'self'", "'unsafe-inline'", "https://cdn.kkiapay.me")
    CSP_STYLE_SRC = ("'self'", "'unsafe-inline'")
    CSP_IMG_SRC = ("'self'", "data:", "https:")

# Trusted origins for CSRF
CSRF_TRUSTED_ORIGINS = [
    "https://tontiflexapp.onrender.com",
    "https://www.tontiflexapp.onrender.com",
]

if DEBUG:
    CSRF_TRUSTED_ORIGINS.extend([
        "http://localhost:8000",
        "http://127.0.0.1:8000",
        "http://localhost:3000",
        "http://127.0.0.1:3000",
    ])

# --- End CORS Configuration ---

# =================================================================
# KKIAPAY CONFIGURATION - MIGRATION MOBILE MONEY
# =================================================================
# Configuration centralis√©e pour l'agr√©gateur KKiaPay
# Documentation : https://kkiapay.me/kkiapay-integration/?lang=en
# Dashboard : https://app.kkiapay.me/dashboard

# Mode SANDBOX ou LIVE
KKIAPAY_SANDBOX = env('KKIAPAY_SANDBOX')

# Cl√©s API KKiaPay
KKIAPAY_PUBLIC_KEY = env('KKIAPAY_PUBLIC_KEY', default='')
KKIAPAY_PRIVATE_KEY = env('KKIAPAY_PRIVATE_KEY', default='')
KKIAPAY_SECRET_KEY = env('KKIAPAY_SECRET_KEY', default='')

# URLs API KKiaPay
KKIAPAY_SANDBOX_URL = env('KKIAPAY_SANDBOX_URL', default='https://api-sandbox.kkiapay.me')
KKIAPAY_LIVE_URL = env('KKIAPAY_LIVE_URL', default='https://api.kkiapay.me')

# URL active selon le mode
KKIAPAY_BASE_URL = KKIAPAY_SANDBOX_URL if KKIAPAY_SANDBOX else KKIAPAY_LIVE_URL

# Webhook Configuration - Adapt√© √† l'environnement
if DEBUG:
    # D√©veloppement local
    KKIAPAY_WEBHOOK_URL = env('KKIAPAY_WEBHOOK_URL', default='http://localhost:8000/api/payments/webhook/')
else:
    # Production sur Render - CORRECTION CRITIQUE
    KKIAPAY_WEBHOOK_URL = env('KKIAPAY_WEBHOOK_URL', default='https://tontiflexapp.onrender.com/api/payments/webhook/')

KKIAPAY_WEBHOOK_SECRET = env('KKIAPAY_WEBHOOK_SECRET', default='')

# Configuration avanc√©e
KKIAPAY_TIMEOUT = env('KKIAPAY_TIMEOUT')
KKIAPAY_MAX_RETRIES = env('KKIAPAY_MAX_RETRIES')
KKIAPAY_LOG_LEVEL = env('KKIAPAY_LOG_LEVEL', default='INFO')

# Devise et pays support√©s
KKIAPAY_CURRENCY = 'XOF'  # Franc CFA
KKIAPAY_SUPPORTED_COUNTRIES = ['BJ', 'TG', 'SN', 'CI']  # B√©nin, Togo, S√©n√©gal, C√¥te d'Ivoire

# =================================================================
# MIGRATION NOTES
# =================================================================
# 1. Configuration SANDBOX active pour tests
# 2. Module mobile_money/ temporairement comment√©
# 3. Nouveau module payments/ en cours de d√©veloppement
# 4. Workflow m√©tier inchang√© c√¥t√© utilisateur
# 5. Passage en LIVE apr√®s validation compl√®te
# =================================================================
