"""
Django settings for tontiflex project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import environ
import os

# Configuration django-environ pour KKiaPay
env = environ.Env(
    # Configuration par défaut
    DEBUG=(bool, False),
    KKIAPAY_SANDBOX=(bool, True),
    KKIAPAY_TIMEOUT=(int, 30),
    KKIAPAY_MAX_RETRIES=(int, 3),
)

# Lecture du fichier .env
environ.Env.read_env(os.path.join(Path(__file__).resolve().parent.parent, '.env'))

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='django-insecure-ea)dvrzq!-zog$cfegzkv7=8!za0dlui4#!fgv2(_t8)x8*uem')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',  # Ajout pour CORS
    'rest_framework',
    'accounts',
    'tontines',
    'loans',
    'savings',
    'notifications',
    'drf_spectacular',
    'payments',  # NOUVEAU MODULE KKIAPAY
    'mobile_money',  # TEMPORAIREMENT RÉACTIVÉ pour éviter erreurs (sera supprimé après migration)
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',  # CORS en premier
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tontiflex.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tontiflex.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- DRF Configuration ---
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'TontiFlex API',
    'DESCRIPTION': 'API pour la gestion des tontines et comptes d\'épargne - Système de Finance Décentralisée',
    'VERSION': '1.0.0',
    'COMPONENT_SPLIT_REQUEST': True,
    'SCHEMA_PATH_PREFIX': r'/api/',
    'SERVE_INCLUDE_SCHEMA': False,
    'SWAGGER_UI_SETTINGS': {
        'deepLinking': True,
        'persistAuthorization': True,
        'displayOperationId': False,
        'defaultModelsExpandDepth': 1,
        'defaultModelExpandDepth': 1,
        'defaultModelRendering': 'example',
        'displayRequestDuration': True,
        'docExpansion': 'none',
        'filter': True,
        'showExtensions': True,
        'showCommonExtensions': True,
        'requestInterceptor': '(req) => { console.log("Request:", req); return req; }',
        'responseInterceptor': '(res) => { console.log("Response:", res); return res; }',
    },
    'SECURITY': [
        {
            'jwtAuth': []
        }
    ],
    'COMPONENTS': {
        'securitySchemes': {
            'jwtAuth': {
                'type': 'http',
                'scheme': 'bearer',
                'bearerFormat': 'JWT',
                'description': 'JWT Authorization header using the Bearer scheme. Enter: Bearer YOUR_ACCESS_TOKEN'
            }
        }
    },
    'SERVERS': [
        {
            'url': 'http://localhost:8000',
            'description': 'Serveur de développement'
        }
    ],
}

# --- JWT Configuration ---

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=2),  # Augmenté à 2h pour le développement
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

# --- End JWT Configuration ---

# --- CORS Configuration ---
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_ALL_ORIGINS = DEBUG  # Allow all origins in development

CORS_ALLOWED_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# --- End CORS Configuration ---

# =================================================================
# KKIAPAY CONFIGURATION - MIGRATION MOBILE MONEY
# =================================================================
# Configuration centralisée pour l'agrégateur KKiaPay
# Documentation : https://kkiapay.me/kkiapay-integration/?lang=en
# Dashboard : https://app.kkiapay.me/dashboard

# Mode SANDBOX ou LIVE
KKIAPAY_SANDBOX = env('KKIAPAY_SANDBOX')

# Clés API KKiaPay
KKIAPAY_PUBLIC_KEY = env('KKIAPAY_PUBLIC_KEY', default='')
KKIAPAY_PRIVATE_KEY = env('KKIAPAY_PRIVATE_KEY', default='')
KKIAPAY_SECRET_KEY = env('KKIAPAY_SECRET_KEY', default='')

# URLs API KKiaPay
KKIAPAY_SANDBOX_URL = env('KKIAPAY_SANDBOX_URL', default='https://api-sandbox.kkiapay.me')
KKIAPAY_LIVE_URL = env('KKIAPAY_LIVE_URL', default='https://api.kkiapay.me')

# URL active selon le mode
KKIAPAY_BASE_URL = KKIAPAY_SANDBOX_URL if KKIAPAY_SANDBOX else KKIAPAY_LIVE_URL

# Webhook Configuration
KKIAPAY_WEBHOOK_URL = env('KKIAPAY_WEBHOOK_URL', default='http://localhost:8000/api/payments/webhook/')
KKIAPAY_WEBHOOK_SECRET = env('KKIAPAY_WEBHOOK_SECRET', default='')

# Configuration avancée
KKIAPAY_TIMEOUT = env('KKIAPAY_TIMEOUT')
KKIAPAY_MAX_RETRIES = env('KKIAPAY_MAX_RETRIES')
KKIAPAY_LOG_LEVEL = env('KKIAPAY_LOG_LEVEL', default='INFO')

# Devise et pays supportés
KKIAPAY_CURRENCY = 'XOF'  # Franc CFA
KKIAPAY_SUPPORTED_COUNTRIES = ['BJ', 'TG', 'SN', 'CI']  # Bénin, Togo, Sénégal, Côte d'Ivoire

# =================================================================
# MIGRATION NOTES
# =================================================================
# 1. Configuration SANDBOX active pour tests
# 2. Module mobile_money/ temporairement commenté
# 3. Nouveau module payments/ en cours de développement
# 4. Workflow métier inchangé côté utilisateur
# 5. Passage en LIVE après validation complète
# =================================================================
