# Generated by Django 5.2.1 on 2025-06-28 08:44

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SFD',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('nom', models.CharField(max_length=255)),
                ('adresse', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=255)),
                ('numeroMobileMoney', models.CharField(help_text='Numéro Mobile Money principal de la SFD', max_length=30)),
                ('dateCreation', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='AdminPlateforme',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'utilisateur", primary_key=True, serialize=False)),
                ('nom', models.CharField(help_text="Nom de famille de l'utilisateur", max_length=100)),
                ('prenom', models.CharField(help_text="Prénom de l'utilisateur", max_length=100)),
                ('telephone', models.CharField(help_text='Numéro de téléphone unique', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format international.', regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(help_text='Adresse email unique', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('adresse', models.TextField(help_text='Adresse physique complète')),
                ('profession', models.CharField(help_text="Profession de l'utilisateur", max_length=100)),
                ('motDePasse', models.CharField(help_text='Mot de passe hashé', max_length=128)),
                ('dateCreation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création du compte')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', help_text='Statut du compte utilisateur', max_length=20)),
                ('derniere_connexion', models.DateTimeField(blank=True, help_text='Date de la dernière connexion', null=True)),
                ('email_verifie', models.BooleanField(default=False, help_text="Indique si l'email a été vérifié")),
                ('peut_gerer_comptes', models.BooleanField(default=True, help_text='Peut créer, suspendre, supprimer les comptes clients, agents, admins SFD, superviseurs')),
                ('peut_gerer_sfd', models.BooleanField(default=True, help_text='Peut ajouter, supprimer, suspendre des SFD')),
                ('est_actif', models.BooleanField(default=True, help_text="Indique si l'admin plateforme est actuellement actif")),
                ('user', models.OneToOneField(blank=True, help_text='Compte Django lié à cet admin plateforme', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='adminplateforme', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Plateforme',
                'verbose_name_plural': 'Admins Plateforme',
                'db_table': 'admin_plateforme',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'utilisateur", primary_key=True, serialize=False)),
                ('nom', models.CharField(help_text="Nom de famille de l'utilisateur", max_length=100)),
                ('prenom', models.CharField(help_text="Prénom de l'utilisateur", max_length=100)),
                ('telephone', models.CharField(help_text='Numéro de téléphone unique', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format international.', regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(help_text='Adresse email unique', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('adresse', models.TextField(help_text='Adresse physique complète')),
                ('profession', models.CharField(help_text="Profession de l'utilisateur", max_length=100)),
                ('motDePasse', models.CharField(help_text='Mot de passe hashé', max_length=128)),
                ('dateCreation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création du compte')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', help_text='Statut du compte utilisateur', max_length=20)),
                ('derniere_connexion', models.DateTimeField(blank=True, help_text='Date de la dernière connexion', null=True)),
                ('email_verifie', models.BooleanField(default=False, help_text="Indique si l'email a été vérifié")),
                ('pieceIdentite', models.FileField(blank=True, help_text="Copie numérique de la pièce d'identité", null=True, upload_to='documents/pieces_identite/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('photoIdentite', models.ImageField(blank=True, help_text="Photo d'identité du client", null=True, upload_to='documents/photos_identite/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('scorefiabilite', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text="Score de fiabilité basé sur l'historique des transactions", max_digits=5)),
                ('user', models.OneToOneField(blank=True, help_text="Utilisateur Django associé pour l'authentification", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientsfd', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'db_table': 'core_client',
            },
        ),
        migrations.CreateModel(
            name='AgentSFD',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'utilisateur", primary_key=True, serialize=False)),
                ('nom', models.CharField(help_text="Nom de famille de l'utilisateur", max_length=100)),
                ('prenom', models.CharField(help_text="Prénom de l'utilisateur", max_length=100)),
                ('telephone', models.CharField(help_text='Numéro de téléphone unique', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format international.', regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(help_text='Adresse email unique', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('adresse', models.TextField(help_text='Adresse physique complète')),
                ('profession', models.CharField(help_text="Profession de l'utilisateur", max_length=100)),
                ('motDePasse', models.CharField(help_text='Mot de passe hashé', max_length=128)),
                ('dateCreation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création du compte')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', help_text='Statut du compte utilisateur', max_length=20)),
                ('derniere_connexion', models.DateTimeField(blank=True, help_text='Date de la dernière connexion', null=True)),
                ('email_verifie', models.BooleanField(default=False, help_text="Indique si l'email a été vérifié")),
                ('est_actif', models.BooleanField(default=True, help_text="Indique si l'agent est actuellement actif")),
                ('user', models.OneToOneField(blank=True, help_text='Compte Django lié à cet agent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agentsfd', to=settings.AUTH_USER_MODEL)),
                ('sfd', models.ForeignKey(help_text='SFD de rattachement', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agents_sfd', to='accounts.sfd')),
            ],
            options={
                'verbose_name': 'Agent SFD',
                'verbose_name_plural': 'Agents SFD',
                'db_table': 'agent_sfd',
            },
        ),
        migrations.CreateModel(
            name='AdministrateurSFD',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'utilisateur", primary_key=True, serialize=False)),
                ('nom', models.CharField(help_text="Nom de famille de l'utilisateur", max_length=100)),
                ('prenom', models.CharField(help_text="Prénom de l'utilisateur", max_length=100)),
                ('telephone', models.CharField(help_text='Numéro de téléphone unique', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format international.', regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(help_text='Adresse email unique', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('adresse', models.TextField(help_text='Adresse physique complète')),
                ('profession', models.CharField(help_text="Profession de l'utilisateur", max_length=100)),
                ('motDePasse', models.CharField(help_text='Mot de passe hashé', max_length=128)),
                ('dateCreation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création du compte')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', help_text='Statut du compte utilisateur', max_length=20)),
                ('derniere_connexion', models.DateTimeField(blank=True, help_text='Date de la dernière connexion', null=True)),
                ('email_verifie', models.BooleanField(default=False, help_text="Indique si l'email a été vérifié")),
                ('peut_creer_tontines', models.BooleanField(default=True, help_text='Autorisation pour créer des tontines')),
                ('est_actif', models.BooleanField(default=True, help_text="Indique si l'administrateur est actuellement actif")),
                ('user', models.OneToOneField(blank=True, help_text='Compte Django lié à cet administrateur SFD', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='administrateurssfd', to=settings.AUTH_USER_MODEL)),
                ('sfd', models.ForeignKey(help_text='SFD administrée', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='administrateurs_sfd', to='accounts.sfd')),
            ],
            options={
                'verbose_name': 'Administrateur SFD',
                'verbose_name_plural': 'Administrateurs SFD',
                'db_table': 'administrateur_sfd',
            },
        ),
        migrations.CreateModel(
            name='SuperviseurSFD',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text="Identifiant unique de l'utilisateur", primary_key=True, serialize=False)),
                ('nom', models.CharField(help_text="Nom de famille de l'utilisateur", max_length=100)),
                ('prenom', models.CharField(help_text="Prénom de l'utilisateur", max_length=100)),
                ('telephone', models.CharField(help_text='Numéro de téléphone unique', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Le numéro de téléphone doit être au format international.', regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(help_text='Adresse email unique', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('adresse', models.TextField(help_text='Adresse physique complète')),
                ('profession', models.CharField(help_text="Profession de l'utilisateur", max_length=100)),
                ('motDePasse', models.CharField(help_text='Mot de passe hashé', max_length=128)),
                ('dateCreation', models.DateTimeField(default=django.utils.timezone.now, help_text='Date de création du compte')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', help_text='Statut du compte utilisateur', max_length=20)),
                ('derniere_connexion', models.DateTimeField(blank=True, help_text='Date de la dernière connexion', null=True)),
                ('email_verifie', models.BooleanField(default=False, help_text="Indique si l'email a été vérifié")),
                ('est_actif', models.BooleanField(default=True, help_text='Indique si le superviseur est actuellement actif')),
                ('sfd', models.ForeignKey(help_text='SFD supervisée', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='superviseurs_sfd', to='accounts.sfd')),
                ('user', models.OneToOneField(blank=True, help_text='Compte Django lié à ce superviseur', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='superviseurssfd', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Superviseur SFD',
                'verbose_name_plural': 'Superviseurs SFD',
                'db_table': 'superviseur_sfd',
            },
        ),
    ]
